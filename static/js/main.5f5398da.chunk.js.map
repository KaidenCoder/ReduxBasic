{"version":3,"sources":["reduxcomponent.js","App.js","reportWebVitals.js","index.js"],"names":["store","createStore","state","action","type","payload","applyMiddleware","thunk","subscribe","console","log","getState","App","s","useSelector","dispatch","useDispatch","className","undefined","Object","keys","length","name","height","mass","birth_year","gender","setup","punchline","onClick","number","Math","floor","random","fetch","then","res","json","data","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4MA8CA,IAAMA,EAAQC,aAXd,SAAiBC,EAAOC,GACpB,OAAQA,EAAOC,MACX,IAAK,YAEL,IAAK,cACD,OAAOD,EAAOE,QAClB,QACI,OAAOH,KAIgBI,YAAgBC,MACnDP,EAAMQ,WAAU,kBAAMC,QAAQC,IAAIV,EAAMW,eACzBX,Q,eCPAY,MApCf,WACE,IAAMC,EAAIC,aAAY,SAAAZ,GAAK,OAAIA,KACzBa,EAAWC,cACjB,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,4CACOC,IAANL,GAAmBM,OAAOC,KAAKP,GAAGQ,OAAS,EAC1C,gCACE,qDACA,uCAAUR,EAAES,QACZ,yCAAYT,EAAEU,UACd,uCAAUV,EAAEW,QACZ,6CAAgBX,EAAEY,cAClB,yCAAYZ,EAAEa,kBAEVR,IAANL,GAA4C,GAAzBM,OAAOC,KAAKP,GAAGQ,OAChC,gCACE,6CACA,uCAAUR,EAAET,QACZ,2CAAcS,EAAEc,SAChB,4CAAed,EAAEe,gBAEnB,gCACE,iEACA,qHACA,iIAGN,wBAAQX,UAAU,MAAMY,QAAS,kBAAMd,GD7BlC,SAACA,EAAUJ,GACd,IAAMmB,EAASC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,EAEhDC,MADY,gCAAkCJ,EAAS,KAElDK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF7B,QAAQC,IAAI4B,GACZvB,EAAS,CACLX,KAAM,YACNC,QAASiC,WCoBvB,uBACA,wBAAQrB,UAAU,MAAMY,QAAS,kBAAMd,GDblC,SAACA,EAAUJ,GAEduB,MADY,qDAEPC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF7B,QAAQC,IAAI4B,GACZvB,EAAS,CACLX,KAAM,cACNC,QAASiC,WCKvB,yBAEA,4BAAG,mBAAGC,KAAK,8CAAR,+BCxBMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAD,CAAUjD,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFkD,SAASC,eAAe,SAM1BX,M","file":"static/js/main.5f5398da.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\"\n\nexport function starwarsdetail() {\n    return (dispatch, getState) => {\n        const number = Math.floor(Math.random() * 81) + 1\n        const url = \"https://swapi.dev/api/people/\" + number + \"/\"\n        fetch(url)\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                dispatch({\n                    type: \"STAR_WARS\",\n                    payload: data\n                })\n            })\n    }\n}\n\n\nexport function getrandomjoke() {\n    return (dispatch, getState) => {\n        const url = \"https://official-joke-api.appspot.com/random_joke\"\n        fetch(url)\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                dispatch({\n                    type: \"RANDOM_JOKE\",\n                    payload: data\n                })\n            })\n    }\n}\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case \"STAR_WARS\":\n            return action.payload\n        case \"RANDOM_JOKE\":\n            return action.payload\n        default:\n            return state\n    }\n}\n\nconst store = createStore(reducer, applyMiddleware(thunk))\nstore.subscribe(() => console.log(store.getState()))\nexport default store","import React from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { starwarsdetail, getrandomjoke } from \"./reduxcomponent\";\nimport './App.css';\n\nfunction App() {\n  const s = useSelector(state => state)\n  const dispatch = useDispatch()\n  return (\n    <div className=\"App\">\n      <h2 className=\"title\">Redux fetch API project  </h2>\n      {s !== undefined && Object.keys(s).length > 4 ?\n        <div>\n          <h3>Star Wars Character</h3>\n          <p>Name: {s.name}</p>\n          <p>Height: {s.height}</p>\n          <p>Mass: {s.mass}</p>\n          <p>Birth Year: {s.birth_year}</p>\n          <p>Gender: {s.gender}</p>\n        </div> :\n        s !== undefined && Object.keys(s).length == 4 ?\n          <div>\n            <h3>Random Joke</h3>\n            <p>Type: {s.type}</p>\n            <p>Question: {s.setup}</p>\n            <p>Punchline: {s.punchline}</p>\n          </div> :\n          <div>\n            <h1>Click the button to see changes</h1>\n            <p>It is a redux based project. The libraries used are react-redux, redux, redux-thunk.</p>\n            <p>This project is a demonstration of how redux works and how we can apply it in large projects.</p>\n          </div>}\n\n      <button className=\"btn\" onClick={() => dispatch(starwarsdetail())}>Star Wars</button>\n      <button className=\"btn\" onClick={() => dispatch(getrandomjoke())}>Random Joke</button>\n\n      <p><a href=\"https://github.com/Kurosakicoder/ReduxBasic\">Github Link</a></p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './reduxcomponent';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}